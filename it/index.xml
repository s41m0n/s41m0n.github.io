<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simone Magnani</title><link>https://s41m0n.github.io/it/</link><atom:link href="https://s41m0n.github.io/it/index.xml" rel="self" type="application/rss+xml"/><description>Simone Magnani</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><copyright>© Copyright `2024` Simone Magnani</copyright><lastBuildDate>Tue, 28 Jun 2022 10:00:00 +0200</lastBuildDate><image><url>https://s41m0n.github.io/media/me.png</url><title>Simone Magnani</title><link>https://s41m0n.github.io/it/</link></image><item><title>NetSoft22 - Towards Application-Aware Provisioning of Security Services with Kubernetes</title><link>https://s41m0n.github.io/it/talk/netsoft22/</link><pubDate>Tue, 28 Jun 2022 10:00:00 +0200</pubDate><guid>https://s41m0n.github.io/it/talk/netsoft22/</guid><description>&lt;p>Nella sicurezza delle reti, Network Function Virtualization può essere utilizzata per implementare servizi di sicurezza flessibili e dedicati ai bisogni dell&amp;rsquo;utente. Tuttavia, nella pratica è complesso da implementare per via delle varie limitazione e le piattaforme software, come Kubernetes, che sono progettate per orchestrare servizi nativi per il Cloud. In questo lavoro, noi complementiamo Kubernetes con un algoritmo per l&amp;rsquo;approvigionamento di servizi di sicurezza specifici delle applicazioni. Dimostriamo che la soluzione proposta migliora i meccanismi basici di approvigionamento, come lo scheduler base di Kubernetes, in termini di Qualità di Servizio e garanzie di sicurezza per gli utenti.&lt;/p></description></item><item><title>A Control Plane Enabling Automated and Fully Adaptive Network Traffic Monitoring With eBPF</title><link>https://s41m0n.github.io/it/publication/opportunistic/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://s41m0n.github.io/it/publication/opportunistic/</guid><description/></item><item><title>Towards Application-Aware Provisioning of Security Services with Kubernetes</title><link>https://s41m0n.github.io/it/publication/netsoft22/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://s41m0n.github.io/it/publication/netsoft22/</guid><description/></item><item><title>DeChainy</title><link>https://s41m0n.github.io/it/project/dechainy/</link><pubDate>Tue, 02 Feb 2021 10:18:25 +0200</pubDate><guid>https://s41m0n.github.io/it/project/dechainy/</guid><description>&lt;p>Nato durante il progetto finale di tesi magistrale mentre ero un membro attivo della community Polycube, DeChainy è un altro framework open source nato per eseguire catene di funzioni di rete, utilizzando sia programmi personalizzati o predefiniti basati su eBPF/XDP.&lt;/p>
&lt;p>La differenza sostanziale con gli altri framework simili risiede nella semplicità di programmazione e utilizzo di DeChainy. Infatti, mentre alcuni servizi con il Firewall o il Mitigatore sono già inclusi nel framwork, gli utenti possono definire i loro servizi e utilizzarli nelle loro catene di servizi di monitoraggio. I servizi sono accessibili in due modi: tramite un server HTTP che predispone apposite API per l&amp;rsquo;interazione con il servizio, o direttamente tramite script in Python.&lt;/p>
&lt;p>Ci sono svariate funzionalità disponibili riguardanti anche le performance di eBPF/XDP.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝).&lt;/p></description></item><item><title>BCC</title><link>https://s41m0n.github.io/it/project/bcc/</link><pubDate>Sun, 09 Aug 2020 11:09:12 +0200</pubDate><guid>https://s41m0n.github.io/it/project/bcc/</guid><description>&lt;p>BCC è un insieme di strumenti per la creazione di programmi di tracing efficienti in kernel.&lt;/p>
&lt;p>Oltre a tutti i software ed esempi inclusi in questa raccolta, BCC è utilizzata in quanto fornisce un set di funzionalità e funzioni di support per interagire facilmente con le strutture BPF del kernel, tipo le mappe e gli array. Infatti, BCC è utilizzato per la creazione di tutti i programmi presenti in progetti come
&lt;a href="https://s41m0n.github.io/project/polycube/">Polycube&lt;/a> e
&lt;a href="https://s41m0n.github.io/project/dechainy/">DeChainy&lt;/a>.&lt;/p>
&lt;p>A Giugno 2020, la community IOVisor ha accettato una mia Pull Request, in cui proponevo nuove funzionalità per interagire con le nuove strutture dati del kernel che sono state introdotte solo recentemente. Ora è possibile dichiarare nei propri programmi eBPF scritti con BCC anche le Queue e Stack.&lt;/p>
&lt;p>Per maggiori informazion, visita la pagina del progett (Tag Codice 🔝)&lt;/p></description></item><item><title>Polycube</title><link>https://s41m0n.github.io/it/project/polycube/</link><pubDate>Sun, 09 Aug 2020 11:07:56 +0200</pubDate><guid>https://s41m0n.github.io/it/project/polycube/</guid><description>&lt;p>Nato anni fa come un progetto di ricerca, Polycube è un framework open source per la creazione di leggere ed efficienti funzioni di rete, come bridge, routers, firewalls, e altre.&lt;/p>
&lt;p>Utilizza sia eBPF che il kernel Linux, per creare funzioni di rete virtuali estremamente veloci ed ottimizzate. E' scritto in C++.&lt;/p>
&lt;p>La mia contribuzione a tale progetto consiste in:&lt;/p>
&lt;ul>
&lt;li>alleggerire l&amp;rsquo;immagine Docker (da 2.7 GB a 260MB)&lt;/li>
&lt;li>estendere il servizio Dynmon, un servizio per l&amp;rsquo;inserimento dinamico di codice eBPF e la creazione di una sonda ad-hoc con la possibilità di esportare metriche di monitoraggio&lt;/li>
&lt;li>risolvere il problema del timestamp dei pacchetti di rete&lt;/li>
&lt;li>introdurre supporto per le funzionalità più recenti del kernel&lt;/li>
&lt;li>ottimizzare ed estendere il servizio Firewall con le operazioni batch&lt;/li>
&lt;li>scrivere uno strumento di profiling&lt;/li>
&lt;li>completare documentazione e test dei vari servizi&lt;/li>
&lt;/ul>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>Spider</title><link>https://s41m0n.github.io/it/project/spider/</link><pubDate>Sun, 09 Aug 2020 11:07:56 +0200</pubDate><guid>https://s41m0n.github.io/it/project/spider/</guid><description>&lt;p>
&lt;a href="https://spider-h2020.eu/" target="_blank" rel="noopener">Spider&lt;/a> è un progetto europeo finanziato dal programma European Union&amp;rsquo;s Horizon 2020 EU Research &amp;amp; Innovation. Fornisce una piattaforma innovativa Cyber Range as a Service (CRaaS) che estende e combina le capacità esistenti dei testbeds di telecomunicazioni e con le più recenti tecnologie di management ed emulazione, gamificazione e giochi per allenarsi in ambito di sicurezza informatica.&lt;/p>
&lt;p>La mia contribuzione consiste nel design e lo sviluppo di una competizione di sicurezza Ruba Bandiera utilizzando i più noti CVE e bug di sicurezza per ottenere il controllo di un dispositivo 5G e rubare le informazioni protette. Infine, ho anche sviluppato una challenge per il Blue team, che consiste nel correggere gli errori di sistema per prevenire future minacce.&lt;/p>
&lt;p>Per maggiori informazioni, visita la
&lt;a href="https://spider-h2020.eu/" target="_blank" rel="noopener">pagina del progetto&lt;/a>&lt;/p></description></item><item><title>Toshi</title><link>https://s41m0n.github.io/it/project/toshi/</link><pubDate>Sun, 09 Aug 2020 11:07:56 +0200</pubDate><guid>https://s41m0n.github.io/it/project/toshi/</guid><description>&lt;p>Total System Shield (Toshi) è un progetto europeo finanziato da EiT-Digital che ho supervisionato come progetto di tesi magistrale al Politecnico di Torino.&lt;/p>
&lt;p>L&amp;rsquo;obiettivo è monitorare il traffico di rete per rilevati attacchi come DDoS e Crypto mining. Quando questi eventi vengono rilevati, automaticamente il sistema inserisce regole di Firewall per prevenire e bloccare attacchi del genere.&lt;/p>
&lt;p>Il framework è composto da vari componenti che interagiscono utilizzando standard REST APIs. Il mio contributo consiste nello sviluppo di programmi eBPF in
&lt;a href="https://s41m0n.github.io/project/polycube/">Polycube&lt;/a> per l&amp;rsquo;analisi del traffico di rete, l&amp;rsquo;estrazione e la condivisione di alcune features importanti.&lt;/p>
&lt;p>eBPF è solitamente utilizzato per osservabilità di sistema e ridirezione del traffico, quindi il suo utilizzo in questo sistema è abbastanza innovativo, ed è risultato efficace, portanto buoni risultati senza alterare le performance del processo di monitoraggio.&lt;/p>
&lt;p>In collaborazione con:&lt;/p>
&lt;ul>
&lt;li>Universidad Politécnica de Madrid&lt;/li>
&lt;li>Fondazione Bruno Kessler&lt;/li>
&lt;li>Telefónica&lt;/li>
&lt;li>RedBorder&lt;/li>
&lt;/ul>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>IDCAS</title><link>https://s41m0n.github.io/it/project/idcas/</link><pubDate>Thu, 09 Jul 2020 11:08:39 +0200</pubDate><guid>https://s41m0n.github.io/it/project/idcas/</guid><description>&lt;p>Intrusion Detection and Counter Attack System (IDCAS) è uno strumento open source sviluppato per essere utilizzato durante le competizioni di Attacco/Difesa. Fornisce un sistema in grado di monitorare il traffico di rete, rilevando potenziali richieste HTTP malevole. Infatti, durante queste competizioni, mentre si prova a rubare le flag degli altri partecipanti per ottenere punti, loro proveranno a loro volta a rubare le tue. IDCAS rileva quando questo avviene, e mentre non può bloccare l&amp;rsquo;attacco in quanto proibito durante tali competizioni, riutilizza la richiesta malevola inoltrandola a tutti gli altri partecipanti per rubare le loro informazioni.&lt;/p>
&lt;p>IDCAS utilizza eBPF/XDP, monitorando il sistema fin dalla scheda di rete.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>IPCAS</title><link>https://s41m0n.github.io/it/project/ipcas/</link><pubDate>Thu, 09 Jul 2020 11:08:39 +0200</pubDate><guid>https://s41m0n.github.io/it/project/ipcas/</guid><description>&lt;p>Intrusion Prevention and Counter Attack System (IPCAS) è uno strumento open source sviluppato per essere utilizzato durante le competizioni di Attacco/Difesa. Fornisce un sistema in grado di monitorare il traffico di rete, rilevando potenziali richieste HTTP malevole. Infatti, durante queste competizioni, mentre si prova a rubare le flag degli altri partecipanti per ottenere punti, loro proveranno a loro volta a rubare le tue. IDCAS rileva quando questo avviene, e mentre previene che le tue vere informazioni vengano rilevate all&amp;rsquo;attaccante ritornando a lui finte informazioni, riutilizza la richiesta malevola inoltrandola a tutti gli altri partecipanti per rubare le loro informazioni.&lt;/p>
&lt;p>IPCAS utilizza mitmproxy, monitorando e inoltrando le richieste al servizio richiesto.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>Cooperative Editor</title><link>https://s41m0n.github.io/it/project/cooperative_editor/</link><pubDate>Tue, 05 May 2020 11:09:03 +0200</pubDate><guid>https://s41m0n.github.io/it/project/cooperative_editor/</guid><description>&lt;p>Un editor cooperativo scritto in C++ che ti permette di creare, gestire e condividere i tuoi documenti con amici, simile a Google Docs (o Word).&lt;/p>
&lt;p>Nato come progetto per il corso universitario &amp;ldquo;Programmazione di Sistema&amp;rdquo;, questo editor è scritto completamente in C++ e può essere installato ovunque. Utilizza l&amp;rsquo;algorimo CRDT per garantire che tutti gli aggiornamenti remoti siano inseriti coerentemente nel documento.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>CrownLabs</title><link>https://s41m0n.github.io/it/project/crownlabs/</link><pubDate>Wed, 15 Apr 2020 10:18:25 +0200</pubDate><guid>https://s41m0n.github.io/it/project/crownlabs/</guid><description>&lt;p>Nato in risposta alla necessità di permettere agli studenti di svolgere i laboratori da remoto durante la pandemia di Covid19, CrownLabs è un insieme di servizi per fornire macchine virtuali assegnate ad ogni utente.&lt;/p>
&lt;p>Gli amministratori/professori possono definire una serie di macchine virtuali, adeguatamente equipaggiate con tutti gli strumenti software per svolgere il determinato laboratorio (e.g., compilatori, simulatori, etc.). Inoltre, ogni studente può condividere il suo Desktop con i suoi colleghi oltre che con il professore, permettendo così agli studenti di completare i laboratori in gruppi.&lt;/p>
&lt;p>Infine, CrownLabs permette agli istruttori di connettersi alle macchine virtuali remote degli studenti in caso di necessità.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>Kubernetes on Desktop</title><link>https://s41m0n.github.io/it/project/k8s_on_desktop/</link><pubDate>Sat, 15 Feb 2020 00:27:15 +0200</pubDate><guid>https://s41m0n.github.io/it/project/k8s_on_desktop/</guid><description>&lt;p>Questo progetto è stato realizzato come Proof of Concept per dimostrare che, grazie alle più recenti ed innovative tecnologie come Kubernetes e VNC, è possibile spostare la computazione dal device del dispositivo utente nell&amp;rsquo;Edge o in un data center remoto. In questo modo, i device utenti risparmiano capacità computazionale, ergo batteria, e l&amp;rsquo;unico requisito è una leggera connessione internet verso il nodo remoto che esegue l&amp;rsquo;applicazione utente.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝)&lt;/p></description></item><item><title>Simone Magnani</title><link>https://s41m0n.github.io/it/author/simone-magnani/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://s41m0n.github.io/it/author/simone-magnani/</guid><description>&lt;p>Simone Magnani è uno studente di dottorato presso la Fondazione Bruno Kessler (Povo, Italia) e l&amp;rsquo;Università di Genova (Genova, Italia). Oltre ad i vari impegni accademici, Simone è interessato alla sicurezza informatica, piattaforme cloud e reti. Inoltre, è stato un membro attivo di vari team di sicurezza informatica italiani,
&lt;a href="https://cesena.github.io" target="_blank" rel="noopener">CeSeNA&lt;/a> e
&lt;a href="https://pwnthemole.github.io" target="_blank" rel="noopener">pwnthem0le&lt;/a>, grazie ai quali non solo ha avuto l&amp;rsquo;opportunità di studiare e riflettere con gli altri membri circa le varie attuali minacce, ma ha anche partecipato a competizioni (chiamate Ruba Bandiera) in cui varie squadre competono contro tra loro.&lt;/p></description></item></channel></rss>