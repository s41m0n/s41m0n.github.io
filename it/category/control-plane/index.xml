<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>control-plane | Simone Magnani</title><link>https://s41m0n.github.io/it/category/control-plane/</link><atom:link href="https://s41m0n.github.io/it/category/control-plane/index.xml" rel="self" type="application/rss+xml"/><description>control-plane</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>it</language><copyright>© Copyright `2022` Simone Magnani</copyright><lastBuildDate>Tue, 02 Feb 2021 10:18:25 +0200</lastBuildDate><image><url>https://s41m0n.github.io/media/me.png</url><title>control-plane</title><link>https://s41m0n.github.io/it/category/control-plane/</link></image><item><title>DeChainy</title><link>https://s41m0n.github.io/it/project/dechainy/</link><pubDate>Tue, 02 Feb 2021 10:18:25 +0200</pubDate><guid>https://s41m0n.github.io/it/project/dechainy/</guid><description>&lt;p>Nato durante il progetto finale di tesi magistrale mentre ero un membro attivo della community Polycube, DeChainy è un altro framework open source nato per eseguire catene di funzioni di rete, utilizzando sia programmi personalizzati o predefiniti basati su eBPF/XDP.&lt;/p>
&lt;p>La differenza sostanziale con gli altri framework simili risiede nella semplicità di programmazione e utilizzo di DeChainy. Infatti, mentre alcuni servizi con il Firewall o il Mitigatore sono già inclusi nel framwork, gli utenti possono definire i loro servizi e utilizzarli nelle loro catene di servizi di monitoraggio. I servizi sono accessibili in due modi: tramite un server HTTP che predispone apposite API per l&amp;rsquo;interazione con il servizio, o direttamente tramite script in Python.&lt;/p>
&lt;p>Ci sono svariate funzionalità disponibili riguardanti anche le performance di eBPF/XDP.&lt;/p>
&lt;p>Per maggiori informazioni, visita la pagina del progetto (Tag Codice 🔝).&lt;/p></description></item></channel></rss>