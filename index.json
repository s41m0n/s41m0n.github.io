[{"authors":["admin"],"categories":null,"content":"Simone Magnani is a PhD student jointly at Fondazione Bruno Kessler (Povo, Italy) and University of Genova (Genova, Italy). Alongside all the academic tasks, he focuses on cyber security, cloud platforms and networking. Moreover, he has been member of two cybersecurity italian teams, CeSeNA and pwnthem0le, thanks to he not only had the opportunity to study and share with the other members many security issues, but he also took part in competitions (called CaptureTheFlag) fighting against other teams.\nFor the entire duration of its PhD study course, Simone wants to keep digging topics like cloud computing and network security, applying artificial intelligence algorithms and advanced kernel packet filtering techniques to prototype and dig out an innovative cyberattacks detection mechanism.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d48c595affeb73f7e59d7bd8e57dbd84","permalink":"https://s41m0n.github.io/author/simone-magnani/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/simone-magnani/","section":"authors","summary":"Simone Magnani is a PhD student jointly at Fondazione Bruno Kessler (Povo, Italy) and University of Genova (Genova, Italy). Alongside all the academic tasks, he focuses on cyber security, cloud platforms and networking.","tags":null,"title":"Simone Magnani","type":"authors"},{"authors":["Roberto Doriguzzi-Corin","Silvio Cretti","Tiziana Catena","Simone Magnani","Domenico Siracusa"],"categories":["conference","orchestrator","provisioning"],"content":"In network security, Network Function Virtualization can be exploited to implement flexible security services tailored to specific user needs. However, in practice this is hard to achieve due to the limitations of reference software platforms, such as Kubernetes, which are designed to orchestrate cloud-native services. In this work, we complement Kubernetes with a state-of-the-art algorithm for application-aware provisioning of security services. We demonstrate that the proposed solution improves basic provisioning mechanisms, such as the default Kubernetes scheduler, in terms of Quality of Service and security guarantees for the users.\n","date":1656403200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656403200,"objectID":"58794103e2e5ba29771073eb10f84400","permalink":"https://s41m0n.github.io/talk/netsoft22/","publishdate":"2022-06-28T10:00:00+02:00","relpermalink":"/talk/netsoft22/","section":"talk","summary":"Demo Paper presentation at the 2022 IEEE Internation conference on network softwarization","tags":["talk","orchestrator","provisioning"],"title":"NetSoft22 - Towards Application-Aware Provisioning of Security Services with Kubernetes","type":"talk"},{"authors":["Roberto Doriguzzi","Silvio Cretti","Tiziana Catena","Magnani Simone","Domenico Siracusa"],"categories":null,"content":"","date":1656374400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"89dea1c8973bded5ac8a6593f212cb79","permalink":"https://s41m0n.github.io/publication/netsoft22/","publishdate":"2022-06-28T20:13:52.623034Z","relpermalink":"/publication/netsoft22/","section":"publication","summary":"In network security, Network Function Virtualization can be exploited to implement flexible security services tailored to specific user needs. However, in practice this is hard to achieve due to the limitations of reference software platforms, such as Kubernetes, which are designed to orchestrate cloud-native services. In this work, we complement Kubernetes with a state-of-the-art algorithm for application-aware provisioning of security services. We demonstrate that the proposed solution improves basic provisioning mechanisms, such as the default Kubernetes scheduler, in terms of Quality of Service and security guarantees for the users.","tags":null,"title":"Towards Application-Aware Provisioning of Security Services with Kubernetes","type":"publication"},{"authors":[],"categories":["control-plane","kernel","iptables","ebpf","firewall","vnf","bpf"],"content":"Born alongside my latest MSc thesis period, while I was an active Polycube developer, DeChainy is another open source framework born to perform Service Programs Chain, using custom or pre-defined eBPF/XDP DataPlanes and Python ControlPlanes.\nThe main difference with others frameworks alike, is that DeChainy has been developed to satisfy the final user (researcher, students, etc.) expectations, and ease its development. In fact, while some service like Firewall or DDoSMitigator is already embedded in the framework, users can customize their network monitoring probes, creating its own programs accessible in two different ways: using an HTTP server, or as if they were custom Python scripts, fully accessible and easy to interact with.\nThere are plenty of features available, also concerning eBPF/XDP performance point of view.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1612253905,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612253905,"objectID":"2c0ada5d552f644fa691eae8a31181fd","permalink":"https://s41m0n.github.io/project/dechainy/","publishdate":"2021-02-02T10:18:25+02:00","relpermalink":"/project/dechainy/","section":"project","summary":"An open source framework to easily build and deploy eBPF/XDP network monitoring probes in order to perform Service Programs Chain efficiently.","tags":["control-plane","data-plane","kernel","iptables","ebpf","firewall","vnf","bpf"],"title":"DeChainy","type":"project"},{"authors":[],"categories":["kernel","ebpf","bpf","tracing","monitoring","wrapper"],"content":"BCC is a toolkit for creating efficient kernel tracing and manipulation programs, and includes several useful tools and examples.\nApart from all the tools and examples, BCC is also widely used because it provides a set of functionalities and helper functions to easily interact with kernel bpf structures, such as maps and arrays. In fact, BCC has been used to build all the eBPF programs used in Polycube and DeChainy.\nIn June 2020, IOVisor accepted a Pull Request of mine, where I proposed new functions and helpers to interact with the newest kernel data structures that have been introduced in the latest kernel updates. Thus, now it is possible to use in-kernel Queues and Stacks within BCC.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1596964152,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596964152,"objectID":"5c1484dd4777b2b08fa8a25dd1864e76","permalink":"https://s41m0n.github.io/project/bcc/","publishdate":"2020-08-09T11:09:12+02:00","relpermalink":"/project/bcc/","section":"project","summary":"BCC is a toolkit for creating efficient kernel tracing and manipulation programs, and includes several useful tools and examples.","tags":["kernel","ebpf","bpf","tracing","monitoring","wrapper"],"title":"BCC","type":"project"},{"authors":[],"categories":["data-plane","kernel","iptables","ebpf","firewall","vnf","kubernetes","nat","bpf","bridge"],"content":"Born as research project years ago, Polycube is an open source software framework that provides fast and lightweight network functions such as bridges, routers, firewalls, and others.\nIt exploits both eBPF and Linux Kernel to perform Virtual Network Functions extremely fast and optimized. It is written in C++.\nMy contribution consists in:\n lighten the Docker image built (from 2.7 GB to 260 MB) extending Dynamic Monitor (Dynmon), a service to dynamically inject user eBPF code, monitor the attached network interface and export metrics addressing packet timestamp problem introducing newest kernel structures support optimize and extend the Firewall service for batch operations writing a flexible Profiler framework completing documentation and tests  For more information, please visit the project website (Code tag above üîù)\n","date":1596964076,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596964076,"objectID":"74a037de1e0f844a7d5203723353d081","permalink":"https://s41m0n.github.io/project/polycube/","publishdate":"2020-08-09T11:07:56+02:00","relpermalink":"/project/polycube/","section":"project","summary":"An open source software framework that provides fast and lightweight network functions such as bridges, routers, firewalls, and others.","tags":["data-plane","kernel","iptables","ebpf","firewall","vnf","kubernetes","nat","bpf","bridge"],"title":"Polycube","type":"project"},{"authors":[],"categories":["security","5g"],"content":" Spider is an European project funded by the European Union\u0026rsquo;s Horizon 2020 EU Research \u0026amp; Innovation program. It delivers an innovative Cyber Range as a Service (CRaaS) platform that extends and combines the capabilities of existing telecommunications testbeds and cyber ranges with the most recent advances in telecommunications management and emulation, gamification and serious games training as well as economics of cybersecurity.\nMy contribution consists into designin an entire challenge Capture the Flag leveraging famous CVE and exploitation techniques to get control of remote 5G nodes and steal information. Finally, I also provided a Blue team challenge, which consists into performing vulnerability assessment and patching the platform in order to prevent such threats.\nFor more information, please visit the project website\n","date":1596964076,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596964076,"objectID":"068a9ad2ef8cf226c3e997909fc79bf8","permalink":"https://s41m0n.github.io/project/spider/","publishdate":"2020-08-09T11:07:56+02:00","relpermalink":"/project/spider/","section":"project","summary":"A Cybersecurity platform for virtualised 5G Cyber Range Services.","tags":["security","5g"],"title":"Spider","type":"project"},{"authors":[],"categories":["security","kernel","ebpf","bpf","artificial-intelligence"],"content":"Total System Shield (Toshi) is an european project funded by EiT-Digital that I carried as my MSc thesis project at Polytechnic of Turin.\nThe aim is to monitor network traffic in order to detect attacks like DDoS and Crypto mining. When such attacks are detected, it automatically inserts rules in the Firewall to both prevent and stop them.\nThe framework is composed by many components which interact using standardized Rest APIs. My concern, was to develop an eBPF program to be injected and used in Polycube in order to analyze incoming and outgoing packets, extracting some features among them and export these values to the other components.\neBPF has always been used for statistics and traffic redirection, so this usage is quiet uncommon, but it turned out to be an innovative approach which led to good results without altering networking perfomance so much.\nIn collaboration with:\n Universidad Polit√©cnica de Madrid Fondazione Bruno Kessler Telef√≥nica RedBorder  For more information, please visit the project website (Code tag above üîù)\n","date":1596964076,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596964076,"objectID":"734d0ab6c92910dd65d1e5a76c87d00d","permalink":"https://s41m0n.github.io/project/toshi/","publishdate":"2020-08-09T11:07:56+02:00","relpermalink":"/project/toshi/","section":"project","summary":"Framework aiming at extracting and detecting threats like DDoS and Crypto mining attacks.","tags":["security","kernel","ebpf","bpf","artificial-intelligence"],"title":"Toshi","type":"project"},{"authors":[],"categories":["security","ebpf","bpf","ctf","attack-defense"],"content":"Intrusion Detection and Counter Attack System (IDCAS) is an open source tool developed to be used during CaptureTheFlag (CTF) Attack/Defense cybersecurity competitions. It provides both full system and single service monitoring, looking for incoming malicious HTTP requests. In fact, during such competitions, while you try to steal other participants secret information to get points, they will try to hack your system stealing yours. IDCAS detects when your system has been compromised and, while it cannot block the attack since it is prohibited in CTF, it will replay the same malicious request to all the other teams.\nIDCAS exploits the use of eBPF and XDP, monitoring the system from the bottom to the top.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1594285719,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594285719,"objectID":"671ec5211cc01d75fda8817e1ade752d","permalink":"https://s41m0n.github.io/project/idcas/","publishdate":"2020-07-09T11:08:39+02:00","relpermalink":"/project/idcas/","section":"project","summary":"An open source framework to detect system exploitation and replay the received attack to others.","tags":["security","ebpf","bpf","ctf","attack-defense"],"title":"IDCAS","type":"project"},{"authors":[],"categories":["security","ebpf","bpf","ctf","attack-defense","mitmproxy","reverse-proxy"],"content":"Intrusion Prevention and Counter Attack System (IPCAS) is an open source tool developed to be used during CaptureTheFlag (CTF) Attack/Defense cybersecurity competitions. It provides full service monitoring, looking for incoming malicious HTTP requests. In fact, during such competitions, while you try to steal other participants secret information to get points, they will try to hack your system stealing yours. IPCAS detects when your system has been compromised and, while it prevents the attack to be successful by providing a fake flag to the attacker, it will replay the same malicious request to all the other teams.\nIPCAS exploits mitmproxy, monitoring and forwarding request to the specified service.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1594285719,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594285719,"objectID":"5595b5f95b1a03eba76b49c9b30d0c58","permalink":"https://s41m0n.github.io/project/ipcas/","publishdate":"2020-07-09T11:08:39+02:00","relpermalink":"/project/ipcas/","section":"project","summary":"An open source framework to detect and prevent system exploitation and replay the received attack to others.","tags":["security","ebpf","bpf","ctf","attack-defense","mitmproxy","reverse-proxy"],"title":"IPCAS","type":"project"},{"authors":["Simone Magnani","Riccardo Marchi","Francesco Pavan"],"categories":["cooperative","sharing","cloud-computing"],"content":"A Cooperative Editor written in C++ which allows you to create, manage and share your documents among your friends, similarly as Google Docs.\nBorn as a project for the System and Device programming course, it is completely written in C++ and can be deployed everywhere. It exploits the use of CRDT algorithm to ensure that all remote updates are coherently introduced in the file.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1588669743,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588669743,"objectID":"60185f7eac111724c2a4a2da8686c01f","permalink":"https://s41m0n.github.io/project/cooperative_editor/","publishdate":"2020-05-05T11:09:03+02:00","relpermalink":"/project/cooperative_editor/","section":"project","summary":"A cooperative editor (Google Docs) written in C++ to edit and share document with your friends","tags":["cooperative","sharing","cloud-computing"],"title":"Cooperative Editor","type":"project"},{"authors":[],"categories":["cloud-computing","kubernetes","kubevirt","vnc","remote-labs"],"content":"Born to address the PoliTo students labs problem during Covid19 pandemic, CrownLabs is a set of services that can deliver remote computing labs through a per-user virtual machine.\nInstructors can provision a set of virtual machines, properly equipped with the software required for a given lab (e.g., compilers, simulation software, etc). In addition, each student can share his remote desktop with his groupmates, enabling multiple students to complete their labs in a team.\nFinally, CrownLabs supports also instructors, who can connect to the remote desktop of the student and play directly with his environment, e.g., in case some help is required.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1586938705,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586938705,"objectID":"31ddc3b631a61993b4a92b357eaebcf2","permalink":"https://s41m0n.github.io/project/crownlabs/","publishdate":"2020-04-15T10:18:25+02:00","relpermalink":"/project/crownlabs/","section":"project","summary":"A set of services that can deliver remote computing labs through a per-user virtual machine.","tags":["cloud-computing","kubernetes","kubevirt","vnc","remote-labs"],"title":"CrownLabs","type":"project"},{"authors":[],"categories":["cloud-computing","kubernetes","docker","vnc","edge-computing"],"content":"This project has been realized as a Proof of Concept to demonstrate that, thanks to the latest innovative technologies like Kubernetes and VNC, it is possible to move computation from the end user device to the edge or a remote data center. This way, devices will save computational resources and, as a result, also battery consumption since they only connect to the node running the desired application using a light remote desktop client.\nFor more information, please visit the project website (Code tag above üîù)\n","date":1581719235,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581719235,"objectID":"da3f1d3616f975313187287d47199e78","permalink":"https://s41m0n.github.io/project/k8s_on_desktop/","publishdate":"2020-02-15T00:27:15+02:00","relpermalink":"/project/k8s_on_desktop/","section":"project","summary":"Edge computing and service remotization","tags":["cloud-computing","kubernetes","docker","vnc","edge-computing"],"title":"Kubernetes on Desktop","type":"project"}]