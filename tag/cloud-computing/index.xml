<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloud-computing | Simone Magnani</title><link>https://s41m0n.github.io/tag/cloud-computing/</link><atom:link href="https://s41m0n.github.io/tag/cloud-computing/index.xml" rel="self" type="application/rss+xml"/><description>cloud-computing</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Copyright `2022` Simone Magnani</copyright><lastBuildDate>Tue, 28 Jun 2022 10:00:00 +0200</lastBuildDate><image><url>https://s41m0n.github.io/media/me.png</url><title>cloud-computing</title><link>https://s41m0n.github.io/tag/cloud-computing/</link></image><item><title>NetSoft22 - Towards Application-Aware Provisioning of Security Services with Kubernetes</title><link>https://s41m0n.github.io/talk/netsoft22/</link><pubDate>Tue, 28 Jun 2022 10:00:00 +0200</pubDate><guid>https://s41m0n.github.io/talk/netsoft22/</guid><description>&lt;p>In network security, Network Function Virtualization can be exploited to implement flexible security services tailored to specific user needs. However, in practice this is hard to achieve due to the limitations of reference software platforms, such as Kubernetes, which are designed to orchestrate cloud-native services. In this work, we complement Kubernetes with a state-of-the-art algorithm for application-aware provisioning of security services. We demonstrate that the proposed solution improves basic provisioning mechanisms, such as the default Kubernetes scheduler, in terms of Quality of Service and security guarantees for the users.&lt;/p></description></item><item><title>Cooperative Editor</title><link>https://s41m0n.github.io/project/cooperative_editor/</link><pubDate>Tue, 05 May 2020 11:09:03 +0200</pubDate><guid>https://s41m0n.github.io/project/cooperative_editor/</guid><description>&lt;p>A Cooperative Editor written in C++ which allows you to create, manage and share your documents among your friends.&lt;/p>
&lt;p>Born as a project for the System and Device programming course, it is completely written in C++ and can be deployed everywhere. It exploits the use of CRDT algorithm to ensure that all remote updates are coherently introduced in the file.&lt;/p>
&lt;p>For more information, please visit the project website (Code tag above 🔝).&lt;/p></description></item><item><title>CrownLabs</title><link>https://s41m0n.github.io/project/crownlabs/</link><pubDate>Wed, 15 Apr 2020 10:18:25 +0200</pubDate><guid>https://s41m0n.github.io/project/crownlabs/</guid><description>&lt;p>Born to address the PoliTo students labs problem during Covid19 pandemic, CrownLabs is a set of services that can deliver remote computing labs through a per-user virtual machine.&lt;/p>
&lt;p>Instructors can provision a set of virtual machines, properly equipped with the software required for a given lab (e.g., compilers, simulation software, etc). In addition, each student can share his remote desktop with his groupmates, enabling multiple students to complete their labs in a team.&lt;/p>
&lt;p>Finally, CrownLabs supports also instructors, who can connect to the remote desktop of the student and play directly with his environment, e.g., in case some help is required.&lt;/p>
&lt;p>For more information, please visit the project website (Code tag above 🔝).&lt;/p></description></item><item><title>Kubernetes on Desktop</title><link>https://s41m0n.github.io/project/k8s_on_desktop/</link><pubDate>Sat, 15 Feb 2020 00:27:15 +0200</pubDate><guid>https://s41m0n.github.io/project/k8s_on_desktop/</guid><description>&lt;p>This project has been realized as a Proof of Concept to demonstrate that, thanks to the latest innovative technologies like Kubernetes and VNC, it is possible to move computation from the end user device to the edge or a remote data center. This way, devices will save computational resources and, as a result, also battery consumption since they only connect to the node running the desired application using a light remote desktop client.&lt;/p>
&lt;p>For more information, please visit the project website (Code tag above 🔝).&lt;/p></description></item></channel></rss>